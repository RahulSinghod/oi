==============
문제 풀이 방법
==============

프로그래밍 문제는 주로 자료구조와 알고리즘을 기반으로 해결한다. 따라서 자료구조와 알고리즘을 어떻게 적용시키는지 실제 문제 풀이를 통한 학습이 필요하다. 여기에서는 어떤 순서로 문제를 풀면 좋은지, 그리고 실제 문제 풀이를 통해 알게된 요령을 정리했다.


문제 풀이 순서
===============

적용 방법에 대한 이해도를 높이기 위해 다음과 같은 순서로 문제를 풀면 좋다. 기본적인 자료 구조와 관련된 문제를 먼저 풀고, 탐색고 같은 알고리즘 관련 문제를 푸는 것이 좋을 것 같다. 아래 내용이 가장 기본적인 프로그래밍 문제 푸는 순서라고 생각한다.

* 자료구조

    * Stack → Queue → Heap → Hash → Set

* 알고리즘

    * Search → Sort → Dynamic programming → Backtracking
    * BFS/DFS → Simulation

위 과정을 한 번 진행한 후에는 조금 더 세부적인 내용을 하는 것이 좋을 것 같다.

* 자료구조

    * Disjoint set

* 알고리즘

    * 작성 예정


문제를 풀이 요령
================

위 과정을 통해 문제 풀이를 하다가 알게된 문제 풀이 요령을 정리했다.

Tip
****

* 런타임 에러가 나는 경우, try-except 문으로 어디서 나는지 확인할 수 있다.

* 범위를 제한해야 하는 경우 일반적으로 생각하는 부등식으로 표현할 수 있다.

    * -1 < i < 10

* 시간복잡도를 계산하면서 문제를 풀면, 시간초과 문제를 해결할 수 있다.

* 새로운 변수를 새로 만들어서 하기보다 기존 변수를 변경해서 문제를 해결하고자 하면 시간초과를 막을 수 있다.

주의사항
*********

* 제한사항을 항상 잘 읽고 유의하기
* 문제를 이해하고 한 번에 푸는 것이 아니라 문제 해결에 필요한 하나하나의 단계로 해법을 표현해야 한다.

의문점
******

* 추가 테스트 케이스를 사용하여 문제를 해결하는 경우가 있는지 여부
